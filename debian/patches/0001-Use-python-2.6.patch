From 25aae215791f2e4a9adcdfa9ab4c214dce8cfc74 Mon Sep 17 00:00:00 2001
From: Sjoerd Simons <sjoerd.simons@collabora.co.uk>
Date: Sat, 8 May 2010 13:17:21 +0100
Subject: [PATCH] Use python 2.6

---
 configure          |   15 ++++++++-------
 configure.in       |    3 ++-
 telepathy-sunshine |    2 +-
 3 files changed, 11 insertions(+), 9 deletions(-)

diff --git a/configure b/configure
index 6a9f419..53dde0c 100755
--- a/configure
+++ b/configure
@@ -2177,15 +2177,16 @@ am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'
 
 
 
+
         if test -n "$PYTHON"; then
       # If the user set $PYTHON, use it and don't search something else.
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $PYTHON version >= 2.5" >&5
-$as_echo_n "checking whether $PYTHON version >= 2.5... " >&6; }
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $PYTHON version >= 2.6" >&5
+$as_echo_n "checking whether $PYTHON version >= 2.6... " >&6; }
       prog="import sys
 # split strings by '.' and convert to numeric.  Append some zeros
 # because we need at least 4 digits for the hex conversion.
 # map returns an iterator in Python 3.0 and a list in 2.x
-minver = list(map(int, '2.5'.split('.'))) + [0, 0, 0]
+minver = list(map(int, '2.6'.split('.'))) + [0, 0, 0]
 minverhex = 0
 # xrange is not present in Python 3.0 and range returns an iterator
 for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
@@ -2204,19 +2205,19 @@ fi
     else
       # Otherwise, try each interpreter until we find one that satisfies
       # VERSION.
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a Python interpreter with version >= 2.5" >&5
-$as_echo_n "checking for a Python interpreter with version >= 2.5... " >&6; }
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for a Python interpreter with version >= 2.6" >&5
+$as_echo_n "checking for a Python interpreter with version >= 2.6... " >&6; }
 if test "${am_cv_pathless_PYTHON+set}" = set; then :
   $as_echo_n "(cached) " >&6
 else
 
-	for am_cv_pathless_PYTHON in python python2 python3 python3.0 python2.5 python2.4 python2.3 python2.2 python2.1 python2.0 none; do
+	for am_cv_pathless_PYTHON in python2.6 python none; do
 	  test "$am_cv_pathless_PYTHON" = none && break
 	  prog="import sys
 # split strings by '.' and convert to numeric.  Append some zeros
 # because we need at least 4 digits for the hex conversion.
 # map returns an iterator in Python 3.0 and a list in 2.x
-minver = list(map(int, '2.5'.split('.'))) + [0, 0, 0]
+minver = list(map(int, '2.6'.split('.'))) + [0, 0, 0]
 minverhex = 0
 # xrange is not present in Python 3.0 and range returns an iterator
 for i in list(range(0, 4)): minverhex = (minverhex << 8) + minver[i]
diff --git a/configure.in b/configure.in
index 4077b0d..e3f8931 100644
--- a/configure.in
+++ b/configure.in
@@ -1,7 +1,8 @@
 AC_INIT(telepathy-sunshine, 0.1.8)
 AM_INIT_AUTOMAKE
 
-AM_PATH_PYTHON(2.5)
+m4_define([_AM_PYTHON_INTERPRETER_LIST],[python2.6 python])
+AM_PATH_PYTHON(2.6)
 
 AC_OUTPUT([
 Makefile
diff --git a/telepathy-sunshine b/telepathy-sunshine
index 40d401d..0594140 100755
--- a/telepathy-sunshine
+++ b/telepathy-sunshine
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/python2.6
 
 import gobject
 import dbus.glib
